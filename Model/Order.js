const mongoose = require("mongoose");

const orderSchema = new mongoose.Schema(
  {
    // Reference to the cart from which this order is created
    cart: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "cart",
      required: true,
    },
    // Optionally, you can also store the userId for easier access
    userId: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "users",
      required: true,
    },
    // Total amount calculated from the cart (in smallest currency unit, e.g., paisa)
    totalAmount: {
      type: Number,
      required: true,
    },
    // Order status could be pending, paid, cancelled, etc.
    status: {
      type: String,
      enum: ["pending", "paid", "cancelled"],
      default: "pending",
    },
    // Razorpay order id generated by Razorpay API
    razorpayOrderId: {
      type: String,
    },
    // Razorpay payment id after successful transaction
    razorpayPaymentId: {
      type: String,
    },
    // Razorpay signature to verify payment authenticity
    razorpaySignature: {
      type: String,
    },
    // You can also add additional fields such as shipping address, etc.
  },
  { timestamps: true }
);

const OrderModel = mongoose.model("order", orderSchema);
module.exports = OrderModel;
